name: Config Service Integration Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  it:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        java: [ '17','21' ]
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
      mysql:
        image: mysql:8.0.35
        ports:
          - 3307:3306
        env:
          MYSQL_ROOT_PASSWORD: Abc12332!
          MYSQL_DATABASE: demo_db
    env:
      SERVER_PORT_NO: 38080
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |-
          mvn -B -P+it package \
            -Dgpg.passphrase=${{ secrets.GPG_SECURITY_PWD }}\
            -Dskip.container=yes \
            -Djava.version=${{ matrix.java }} --file pom.xml
      - name: Run AllInOne Application
        uses: JarvusInnovations/background-action@v1.0.7
        with:
          working-directory: config-demo
          wait-for: 2m
          tail: true
          run: java -jar target/config-demo-fat.jar &
          wait-on: http-get://localhost:${{ env.SERVER_PORT_NO }}/actuator/health
      - name: Download ijhttp tools
        run: |-
          curl -f -L -o ijhttp.zip "https://jb.gg/ijhttp/latest"
          unzip ijhttp.zip
          ./ijhttp/ijhttp --version
      - name: Execute Integration Tests
        run: ./ijhttp/ijhttp config-demo/src/test/http/it.http
  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ "it" ]
    runs-on: ubuntu-22.04
    env:
      MAVEN_USERNAME: ${{ secrets.OSSRH_ID }}
      MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
    steps:
      - name: Install gpg secret key
        run: |-
          # Install gpg secret key
          cat <(echo -e "${{ secrets.GPG_SECURITY_KEY }}") | gpg --batch --import
          # Verify gpg secret key
          gpg --list-secret-keys --keyid-format LONG
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up maven settings
        uses: s4u/maven-settings-action@v3
        with:
          servers: |
            [{
              "id": "ossrh",
              "username": "${{ secrets.OSSRH_ID }}",
              "password": "${{ secrets.OSSRH_TOKEN }}"
            },
            {
              "id": "gpg",
              "passphrase": "${{ secrets.GPG_SECURITY_PWD }}",
              "configuration": {}
            }]
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
      - name: Deploy to OSSRH
        run: mvn -P+release -Djava.version=17 -DskipTests=true clean deploy
  release:
    if: ${{ startsWith('refs/heads/tags',github.ref) }}
    runs-on: ubuntu-22.04
    needs: [ "deploy" ]
    steps:
      - name: release
        run: echo release
